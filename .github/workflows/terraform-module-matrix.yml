name: Terraform Module Jobs

on:
  push:

jobs:
  terraform-fmt:
    runs-on: ubuntu-latest
    outputs:
      fmt_status: ${{ steps.fmt.outcome }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -check

      # - name: Commit Changes
      #   id: fmt_commit
      #   run: |
      #     git config --local user.name "${{ inputs.commit_user }}"
      #     git config --local user.email "${{ inputs.commit_email }}"
      #     if [[ -z $(git status -s) ]]; then
      #         echo "diff=false" >> $GITHUB_OUTPUT
      #     else
      #         echo "diff=true" >> $GITHUB_OUTPUT
      #     fi
      #     git diff-index --quiet HEAD || git commit -m "style(terraform fmt): format code" -a

      # - name: Push Changes
      #   uses: ad-m/github-push-action@v0.8.0
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ${{ github.event.push.head.ref }}

  terraform-validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate
  
  checkov-validate:
    runs-on: ubuntu-latest
    permissions: 
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get
    steps:
      - uses: actions/checkout@v4
      - name: Setup Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif

  terraform-docs:
    runs-on: ubuntu-latest
    outputs:
      docs_status: ${{ steps.docs.outcome }}
      diff_exists: ${{ steps.docs.outputs.num_changed > 0 }}

    steps:
      - uses: actions/checkout@v4

      - name: Check For Submodules
        id: check_submodules
        run: |
          if [[ -d "./modules" ]]; then
              echo "dir_exists=true" >> $GITHUB_OUTPUT
          else
              echo "dir_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Terraform Docs
        id: docs
        uses: terraform-docs/gh-actions@v1.1.0
        with:
          working-dir: .
          recursive: ${{ steps.check_submodules.outputs.dir_exists }}
          recursive-path: modules
          output-file: README.md
          output-method: inject
          args: --sort-by required
          git-push: true
          git-commit-message: "docs(terraform-docs): update readme"

  terraform-lint:
    runs-on: ubuntu-latest
    outputs:
      lint_status: ${{ steps.lint.outcome }}
    steps:
      - uses: actions/checkout@v4

      # we have the tflint file in this repo
      # - name: Get Config TFLint
      #   uses: terraform-linters/tflint-load-config-action@v1
      #   with:
      #     source-repo: ${{ github.repository }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        id: lint
        run: tflint --format compact

  workflow-summary:
    needs:
      - terraform-fmt
      - terraform-validate
      - checkov-validate
      - terraform-docs
      - terraform-lint
    runs-on: ubuntu-latest
    if: ${{ always() }}

    steps:
      - name: Workflow Summary
        env:
          TF_FMT_RESULT: ${{ fromJSON('[":white_check_mark:", ":x:"]')[needs.terraform-fmt.outputs.fmt_status != 'success'] }}
          TF_DOCS_RESULT: ${{ fromJSON('[":white_check_mark:", ":x:"]')[needs.terraform-docs.outputs.docs_status != 'success'] }}
          TF_LINT_RESULT: ${{ fromJSON('[":white_check_mark:", ":x:"]')[needs.terraform-lint.outputs.lint_status != 'success'] }}
        run: |
          echo '### WORKFLOW SUMMARY :octocat:' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '| result | job |' >> $GITHUB_STEP_SUMMARY
          echo '|---|---|' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.TF_FMT_RESULT }} | terraform format |' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.TF_DOCS_RESULT }} | terraform docs |' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.TF_LINT_RESULT }} | terraform lint |' >> $GITHUB_STEP_SUMMARY